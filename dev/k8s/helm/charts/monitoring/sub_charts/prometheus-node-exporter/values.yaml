image:
  registry: quay.io
  repository: prometheus/node-exporter
  tag: ''
  pullPolicy: IfNotPresent
  digest: ''
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
revisionHistoryLimit: 10
global:
  imagePullSecrets: []
  imageRegistry: ''
kubeRBACProxy:
  enabled: false
  env: {}
  image:
    registry: quay.io
    repository: brancz/kube-rbac-proxy
    tag: v0.15.0
    sha: ''
    pullPolicy: IfNotPresent
  extraArgs: []
  containerSecurityContext: {}
  port: 8100
  portName: http
  enableHostPort: false
  proxyEndpointsPort: 8888
  enableProxyEndpointsHostPort: false
  resources: {}
service:
  enabled: true
  type: ClusterIP
  port: 9100
  targetPort: 9100
  nodePort: null
  portName: http-metrics
  listenOnAllInterfaces: true
  annotations:
    prometheus.io/scrape: 'true'
  ipDualStack:
    enabled: false
    ipFamilies:
    - IPv6
    - IPv4
    ipFamilyPolicy: PreferDualStack
networkPolicy:
  enabled: false
env: {}
prometheus:
  monitor:
    enabled: true
    jobLabel: jobLabel
    interval: ''
    sampleLimit: 0
    targetLimit: 0
    labelLimit: 0
    labelNameLengthLimit: 0
    labelValueLengthLimit: 0
    scrapeTimeout: ''
    proxyUrl: ''
    metricRelabelings: []
    relabelings: []
  podMonitor:
    enabled: false
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
resources: {}
restartPolicy: null
serviceAccount:
  create: true
  name: null
  annotations: {}
  imagePullSecrets: []
  automountServiceAccountToken: false
securityContext:
  fsGroup: 65534
  runAsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
containerSecurityContext:
  readOnlyRootFilesystem: true
rbac:
  create: true
  pspEnabled: false
  pspAnnotations: {}
endpoints: []
hostNetwork: true
hostPID: true
hostRootFsMount:
  enabled: true
  mountPropagation: HostToContainer
hostProcFsMount:
  mountPropagation: ''
hostSysFsMount:
  mountPropagation: ''
affinity: {}
podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
podLabels:
  jobLabel: node-exporter
daemonsetAnnotations: {}
releaseLabel: true
dnsConfig: {}
nodeSelector:
  kubernetes.io/os: linux
terminationGracePeriodSeconds: null
tolerations:
- effect: NoSchedule
  operator: Exists
terminationMessageParams:
  enabled: false
  terminationMessagePath: /dev/termination-log
  terminationMessagePolicy: File
extraArgs:
- --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
- --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
extraHostVolumeMounts: []
configmaps: []
secrets: []
namespaceOverride: ''
sidecars: []
sidecarVolumeMount: []
sidecarHostVolumeMounts: []
extraInitContainers: []
livenessProbe:
  failureThreshold: 3
  httpGet:
    httpHeaders: []
    scheme: http
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 3
  httpGet:
    httpHeaders: []
    scheme: http
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
verticalPodAutoscaler:
  enabled: false
  controlledResources: []
  maxAllowed: {}
  minAllowed: {}
extraManifests: []
version: ''
